This file is mostly for things which need to be done eventually but are
subtle enough to be forgotten.  There are many more things I need to do which
are not recorded here.

General:
* Unit testing
* Figure out how long it should take for IRQs to fire on real hardware.
  Most IRQs fire instantly on WashingtonDC; this is obviously not correct.
  In the case of PowerVR2, the delay I'm using is entirely fictional because
  I found out that there are a lot of games which will miss interrupts and hang
  indefinitely if IRQs happen instantly.

DMA:
* I think there might be a few places where I need to be making sure that
  certain DMA channels are enabled before I perform a DMA.
* There are definitely a few places where there are DMA protection registers
  that are supposed to prevent DMA writes outside of certain address ranges;
  these aren't all implemented.  I'm fairly certain it is not implemented for
  maplebus yet.

sh4:
* MMU support for Store Queues
* Store queue timing (Is it really supposed to be instant?)
* Unit test for store queues
* It might also be a good idea to do a better job counting cycles in general.
  The current implementation assumes that the number of cycles to execute
  each instruction will always be equal to the issue for that instruction.
  There is no emulation of stalls/latency/interdependency.
* the sh4 spec says that when two exceptions of equal priority happen at the same time, the sh4
  will chose the one with a higher priority order.  Currently I don't have this implemented.

Sync Pulse Generator:
* Take interlacing into account (this effects the number of lines per field
  amongst other things)


PVR2:
* implement mipmaps.  The current implementation always uses the
  highest-resolution version of the textures instead of picking one based on
  distance like it should.
* Figure out what to do when the 1/z value input by guest-programs is zero.
  Obviously this fucks things up when we do the divide to get z.  It might be
  that 1/z==0 is never a valid input value, but I need to verify.
